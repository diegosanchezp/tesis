# Generated by Django 5.0.6 on 2024-05-26 20:00

from django.db import migrations
from django.conf import settings
from django.apps.registry import Apps
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

from wagtail.models import BaseViewRestriction

from django_src.settings.wagtail_pages import (
    home_page_path,
    jobs_index_path,
    EMPRESAS_GROUP_NAME,
)


def create_jobs_data(apps: Apps, schema_editor: BaseDatabaseSchemaEditor):
    User = apps.get_model(settings.AUTH_USER_MODEL)
    HomePage = apps.get_model("main", "HomePage")
    JobOfferIndex = apps.get_model("business", "JobOfferIndex")
    Permission = apps.get_model("auth", model_name="Permission")
    Group = apps.get_model("auth", model_name="Group")
    GroupPagePermission = apps.get_model(
        "wagtailcore", model_name="GroupPagePermission"
    )

    # Admin is Created by 0002_setup_admin
    admin = User.objects.get(username=settings.ADMIN_USERNAME)

    # Home page was created in main.
    home_page = HomePage.objects.get(path=home_page_path)

    ContentType = apps.get_model("contenttypes.ContentType")

    jobsindex_content_type, created = ContentType.objects.get_or_create(
        model="jobofferindex", app_label="business"
    )

    jobs_offer_index = JobOfferIndex.objects.create(
        owner=admin,
        content_type=jobsindex_content_type,
        live=True,
        title="Ofertas de trabajo",
        locale=home_page.locale,
        slug="trabajos",
        url_path="/trabajos/",
        path=jobs_index_path,
        depth=3,
    )

    Group = apps.get_model("auth", model_name="Group")
    # Create a mentor group
    business_group = Group.objects.create(name=EMPRESAS_GROUP_NAME)

    # Empresas group can access the wagtail admin interface
    wagtail_access_admin = Permission.objects.get(codename="access_admin")

    business_group.permissions.add(wagtail_access_admin)

    # Setup page permission business/enterprise group can add o job offer post
    # add_page comes from wagtail's data migrations
    add_page_permission = Permission.objects.get(codename="add_page")
    GroupPagePermission.objects.create(
        group=business_group,
        page=jobs_offer_index,
        permission=add_page_permission,
    )

    # Only logged in users can see the job posts
    jobs_offer_index.view_restrictions.create(
        restriction_type=BaseViewRestriction.LOGIN,
    )


def remove_jobs_data(apps: Apps, schema_editor: BaseDatabaseSchemaEditor):

    JobOfferIndex = apps.get_model("business", "JobOfferIndex")
    JobOffer = apps.get_model("business", "JobOffer")
    Group = apps.get_model("auth", model_name="Group")

    jobs_offer_index = JobOfferIndex.objects.get(path=jobs_index_path)
    jobs_offer_index.delete()
    # delete all jobs offer pages the index .delete() method doesn't delete its children
    # so we have to do it manually
    JobOffer.objects.all().delete()

    # Delete the empresas group
    Group.objects.get(name=EMPRESAS_GROUP_NAME).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0003_wagtail_setup"),
        ("customauth", "0002_setup_admin"),
        ("business", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_jobs_data, remove_jobs_data),
    ]
